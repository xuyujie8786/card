version: '3.8'

networks:
  vcard-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:

services:
  database:
    image: postgres:15-alpine
    container_name: vcard-postgres
    env_file:
      - .env.production
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vcard-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: vcard-redis
    env_file:
      - .env.production
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - vcard-network
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vcard-backend
    env_file:
      - .env.production
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "3001:3001"
    networks:
      - vcard-network
    restart: always

  frontend:
    build:
      context: ./v1
      dockerfile: Dockerfile
    container_name: vcard-frontend
    depends_on:
      - backend
    ports:
      - "8000:80"
    networks:
      - vcard-network
    restart: always
